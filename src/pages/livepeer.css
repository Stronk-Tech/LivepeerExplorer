/* CSS File for livepeer page */

.livepeer-container {
  display: grid;
  grid-template-columns: 1fr;
  gap: 0;
  max-width: 1200px;
  margin: 0 auto;
  padding: 0.5rem;
  overflow: hidden;
  height: 100vh;
  box-sizing: border-box;
}

.livepeer-header {
  display: flex;
  flex-direction: column;
  background: var(--section-background);
  padding: 1rem 1.5rem;
  border-radius: 10px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
  margin-bottom: 0.5rem;
  grid-column: span 2;
  z-index: 101;
  gap: 1rem;
  flex-shrink: 0;
}

.header-row-main {
  display: flex;
  justify-content: space-between;
  align-items: center;
  min-width: 0;
  gap: 0.25rem;
  flex-wrap: nowrap;
}

.header-left {
  display: flex;
  align-items: center;
  flex: 1;
  overflow: hidden;
  gap: 0.25rem;
  min-width: 0;
}

.home-button {
  background: none;
  border: none;
  cursor: pointer;
  flex-shrink: 0;
}

.home-icon {
  width: 30px;
  height: 30px;
  box-shadow: none;
}

.search-container {
  flex: 1;
  max-width: none;
  min-width: 100px;
}

.search-input {
  width: 100%;
  padding: 0.5rem 1rem;
  border: 1px solid var(--button-border);
  border-radius: 6px;
  background: var(--button-background);
  color: var(--button-text-color);
  font-size: 1rem;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;
  min-width: 0;
}

.search-input:focus {
  outline: none;
  border-color: var(--blue);
  box-shadow: 0 0 0 2px rgba(37, 150, 190, 0.2);
}

.search-input::placeholder {
  color: var(--lighter);
}

.header-right {
  display: flex;
  align-items: center;
  gap: 0.25rem;
  flex-shrink: 0;
}

.header-row-filters {
  border-top: 1px solid var(--button-border);
  padding-top: 1rem;
  width: 100%;
}

.filter-controls {
  display: flex;
  align-items: center;
  gap: 1.5rem;
  flex-wrap: nowrap;
  overflow-x: auto;
  width: 100%;
  min-height: 48px;
}

.amount-filter {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex-shrink: 0;
}

.filter-label {
  color: var(--button-text-color);
  font-size: 0.9rem;
  white-space: nowrap;
}

.filter-input {
  width: 100px;
  padding: 0.4rem 0.6rem;
  border: 1px solid var(--button-border);
  border-radius: 4px;
  background: var(--button-background);
  color: var(--button-text-color);
  font-size: 0.9rem;
}

.filter-input:focus {
  outline: none;
  border-color: var(--blue);
}

.filter-buttons {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  flex-wrap: nowrap;
  flex: 1;
  min-width: 0;
}

.filter-button {
  padding: 0.4rem 0.6rem;
  border: 1px solid var(--button-border);
  border-radius: 6px;
  font-size: 0.9rem;
  cursor: pointer;
  transition: all 0.3s ease;
  white-space: nowrap;
  flex: 1;
  min-width: 0;
  text-align: center;
  height: 38px;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Event type-specific colors for active state */
.filter-button.active {
  color: white;
  border-width: 1px;
  border-style: solid;
}

/* Specific colors for each button type */
.filter-button.active[data-type="reward"] {
  background-color: rgba(25, 27, 158, 0.8);
  border-color: rgba(25, 27, 158, 1);
}

.filter-button.active[data-type="update"] {
  background-color: rgba(158, 25, 52, 0.8);
  border-color: rgba(158, 25, 52, 1);
}

.filter-button.active[data-type="withdraw"] {
  background-color: rgba(158, 98, 25, 0.8);
  border-color: rgba(158, 98, 25, 1);
}

.filter-button.active[data-type="transfer"] {
  background-color: rgba(93, 84, 164, 0.8);
  border-color: rgba(93, 84, 164, 1);
}

.filter-button.active[data-type="redeem"] {
  background-color: rgba(37, 150, 190, 0.8);
  border-color: rgba(37, 150, 190, 1);
}

.filter-button.active[data-type="activate"] {
  background-color: rgba(120, 181, 151, 0.8);
  border-color: rgba(120, 181, 151, 1);
}

.filter-button.active[data-type="stake"] {
  background-color: rgba(25, 158, 147, 0.8);
  border-color: rgba(25, 158, 147, 1);
}

.filter-button.active[data-type="unbond"] {
  background-color: rgba(105, 25, 158, 0.8);
  border-color: rgba(105, 25, 158, 1);
}

.filter-button.inactive {
  background: var(--button-background);
  color: var(--button-text-color);
  opacity: 0.6;
  border-style: dashed;
}

.filter-button:hover {
  background: var(--button-hover-background);
  color: var(--heading-color);
  transform: scale(1.02);
}

.clear-button {
  background: var(--button-background);
  color: var(--button-text-color);
  border: 1px solid var(--button-border);
  padding: 0.5rem 0.8rem;
  border-radius: 6px;
  cursor: pointer;
  transition: background 0.3s, box-shadow 0.3s;
  white-space: nowrap;
  flex-shrink: 0;
}

.clear-button:hover {
  background: var(--button-hover-background);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);
}

.livepeer-main {
  display: grid;
  grid-template-columns: 1fr;
  gap: 0;
  position: relative;
  transition: all 0.3s ease-in-out;
  flex: 1;
  overflow: hidden;
}

/* Modal styles */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.75);
  display: flex;
  justify-content: center;
  align-items: flex-start;
  z-index: 9999;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease, visibility 0.3s ease;
  overflow-y: auto;
  padding: 2rem 1rem;
  isolation: isolate;
}

.modal-overlay.show {
  opacity: 1;
  visibility: visible;
}

/* Orchestrator Modal */
.orchestrator-modal {
  position: relative;
  width: 95%;
  max-width: 800px;
  max-height: none;
  margin: 2rem auto;
  background-color: var(--section-background);
  border: 1px solid var(--button-border);
  color: var(--heading-color);
  border-radius: 10px;
  padding: 2rem;
  box-shadow: 0 4px 32px rgba(0, 0, 0, 0.5);
  transform: scale(0.95);
  opacity: 0;
  transition: transform 0.3s ease, opacity 0.3s ease;
  isolation: isolate;
}

.orchestrator-modal.show {
  transform: scale(1);
  opacity: 1;
}

.orchestrator-modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  padding-bottom: 1rem;
  border-bottom: 1px solid var(--button-border);
  min-width: 0;
  width: 100%;
}

.orchestrator-modal-title {
  font-size: 1.75rem;
  color: var(--heading-color);
  margin: 0;
  display: flex;
  align-items: center;
  gap: 0.75rem;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  min-width: 0;
  flex: 1;
  max-width: calc(100% - 4rem);
}

.orchestrator-modal-close {
  background: none;
  border: none;
  color: var(--button-text-color);
  font-size: 1.75rem;
  cursor: pointer;
  padding: 0.75rem;
  border-radius: 4px;
  transition: background-color 0.2s ease, color 0.2s ease;
  margin: -0.75rem;
  flex-shrink: 0;
}

.orchestrator-modal-close:hover {
  background-color: var(--button-hover-background);
  color: var(--heading-color);
}

.orchestrator-modal-content {
  overflow-y: auto;
  max-height: calc(80vh - 8rem);
}

.scroll-wrapper {
  max-height: 400px;
  overflow: hidden;
}

.scroll-container {
  padding: 1rem;
}

.scroll-content {
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
}

.vertical-divider {
  width: 100%;
  height: 2px;
  background: var(--grey);
  margin: 1rem 0;
}

@media (max-width: 768px) {
  .livepeer-container {
    grid-template-columns: 1fr;
    padding: 0.25rem;
  }

  .livepeer-header {
    padding: 0.75rem 1rem;
  }

  .livepeer-main {
    grid-template-columns: 1fr;
  }

  .orchestrator-modal {
    width: 100%;
    margin: 1rem auto;
    padding: 1.5rem;
  }

  .clear-button {
    font-size: 0.875rem;
    padding: 0.4rem 0.8rem;
  }

  .filter-controls {
    gap: 1rem;
    overflow-x: auto;
  }

  .filter-buttons {
    gap: 0.25rem;
    flex-wrap: nowrap;
    width: 100%;
    min-width: 0;
  }

  .filter-button {
    font-size: 0.7rem;
    padding: 0.3rem 0.4rem;
    flex: 1;
    min-width: 60px;
  }

  .filter-input {
    width: 80px;
  }

  .search-input {
    font-size: 0.9rem;
  }

  .header-row-main {
    gap: 0.25rem;
    flex-wrap: nowrap;
  }

  .header-left {
    gap: 0.25rem;
    flex-direction: row;
    align-items: center;
  }

  .search-container {
    flex: 1;
    max-width: none;
    min-width: 100px;
  }

  .header-right {
    justify-content: flex-end;
  }
}
